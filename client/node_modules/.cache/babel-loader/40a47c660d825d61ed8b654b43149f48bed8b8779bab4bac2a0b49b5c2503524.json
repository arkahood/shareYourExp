{"ast":null,"code":"var _jsxFileName = \"/home/arkajit/Desktop/shareYourExp/client/src/components/details/Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { Box, TextareaAutosize, Button, styled } from '@mui/material';\n\n//components\nimport Comment from './Comment';\nimport { API } from '../../service/api';\nimport { DataContext } from '../../context/DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  name: '',\n  postId: '',\n  date: new Date(),\n  comments: ''\n};\nconst Comments = _ref => {\n  _s();\n  let {\n    post\n  } = _ref;\n  const url = 'https://static.thenounproject.com/png/12017-200.png';\n  const [comment, setComment] = useState(initialValue);\n  const [comments, setComments] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const {\n    account\n  } = useContext(DataContext);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await API.getAllComments(post._id);\n      if (response.isSuccess) {\n        setComments(response.data);\n      }\n    };\n    getData();\n  }, [toggle, post]);\n  const handleChange = e => {\n    setComment({\n      ...comment,\n      name: account.username,\n      postId: post._id,\n      comments: e.target.value\n    });\n  };\n  const addComment = async () => {\n    await API.newComment(comment);\n    setComment(initialValue);\n    setToggle(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: url,\n        alt: \"dp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextArea, {\n        rowsMin: 5,\n        placeholder: \"what's on your mind?\",\n        onChange: e => handleChange(e),\n        value: comment.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        style: {\n          height: 40\n        },\n        onClick: e => addComment(e),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: comments && comments.length > 0 && comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"QVlFBytq4fFxKmt1gnfc5HoXwmU=\");\n_c = Comments;\nconst Container = styled(Box)`\n    margin-top: 100px;\n    display: flex;\n`;\n_c2 = Container;\nconst Image = styled('img')({\n  width: 50,\n  height: 50,\n  borderRadius: '50%'\n});\n_c3 = Image;\nconst StyledTextArea = styled(TextareaAutosize)`\n    height: 100px !important;\n    width: 100%; \n    margin: 0 20px;\n`;\n_c4 = StyledTextArea;\nexport default Comments;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"StyledTextArea\");","map":{"version":3,"names":["useState","useEffect","useContext","Box","TextareaAutosize","Button","styled","Comment","API","DataContext","initialValue","name","postId","date","Date","comments","Comments","post","url","comment","setComment","setComments","toggle","setToggle","account","getData","response","getAllComments","_id","isSuccess","data","handleChange","e","username","target","value","addComment","newComment","prev","height","length","map","Container","Image","width","borderRadius","StyledTextArea"],"sources":["/home/arkajit/Desktop/shareYourExp/client/src/components/details/Comments.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { Box, TextareaAutosize, Button, styled } from '@mui/material';\n\n\n\n\n//components\nimport Comment from './Comment';\nimport { API } from '../../service/api';\nimport { DataContext } from '../../context/DataProvider';\n\nconst initialValue = {\n    name: '',\n    postId: '',\n    date: new Date(),\n    comments: ''\n}\n\nconst Comments = ({ post }) => {\n    const url = 'https://static.thenounproject.com/png/12017-200.png'\n\n    const [comment, setComment] = useState(initialValue);\n    const [comments, setComments] = useState([]);\n    const [toggle, setToggle] = useState(false);\n\n    const { account } = useContext(DataContext);\n\n    useEffect(() => {\n        const getData = async () => {\n            const response = await API.getAllComments(post._id);\n            if (response.isSuccess) {\n                setComments(response.data);\n            }\n        }\n        getData();\n    }, [toggle, post]);\n\n    const handleChange = (e) => {\n        setComment({\n            ...comment,\n            name: account.username,\n            postId: post._id,\n            comments: e.target.value\n        });\n    }\n\n    const addComment = async() => {\n        await API.newComment(comment);\n        setComment(initialValue)\n        setToggle(prev => !prev);\n    }\n    \n    return (\n        <Box>\n            <Container>\n                <Image src={url} alt=\"dp\" />   \n                <StyledTextArea \n                    rowsMin={5} \n                    placeholder=\"what's on your mind?\"\n                    onChange={(e) => handleChange(e)} \n                    value={comment.comments}\n                />\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    size=\"medium\" \n                    style={{ height: 40 }}\n                    onClick={(e) => addComment(e)}\n                >Post</Button>             \n            </Container>\n            <Box>\n                {\n                    comments && comments.length > 0 && comments.map(comment => (\n                        <Comment comment={comment} setToggle={setToggle} />\n                    ))\n                }\n            </Box>\n        </Box>\n    )\n}\nconst Container = styled(Box)`\n    margin-top: 100px;\n    display: flex;\n`;\n\nconst Image = styled('img')({\n    width: 50,\n    height: 50,\n    borderRadius: '50%'\n});\n\nconst StyledTextArea = styled(TextareaAutosize)`\n    height: 100px !important;\n    width: 100%; \n    margin: 0 20px;\n`;\n\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}