{"ast":null,"code":"var _jsxFileName = \"/home/arkajit/Desktop/shareYourExp/client/src/components/home/Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Grid, Box } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { API } from '../../service/api';\nimport Post from \"./Post\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [SearchParams] = useSearchParams();\n  const category = SearchParams.get('category');\n  const userName = SearchParams.get('username');\n  useEffect(() => {\n    const getAllpost = async () => {\n      let res = await API.getAllPost({\n        category: category || '',\n        username: userName || ''\n      });\n      if (res.isSuccess) {\n        setPosts(res.data);\n      }\n    };\n    getAllpost();\n  }, [category, userName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts !== null && posts !== void 0 && posts.length ? posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        to: `details/${post._id}`,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: '878787',\n        margin: '30px 80px',\n        fontSize: 18\n      },\n      children: \"No data is available for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n};\n_s(Posts, \"0bda/icLJC1318ONVJn5+lrU2Rk=\", false, function () {\n  return [useSearchParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Grid","Box","Link","useSearchParams","API","Post","Posts","posts","setPosts","SearchParams","category","get","userName","getAllpost","res","getAllPost","username","isSuccess","data","length","map","post","textDecoration","color","_id","margin","fontSize"],"sources":["/home/arkajit/Desktop/shareYourExp/client/src/components/home/Posts.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\"\nimport { Grid, Box } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nimport {API} from '../../service/api';\nimport Post from \"./Post\";\n\nconst Posts = ()=> {\n\n  const [posts , setPosts] = useState([]);\n  \n  const [SearchParams] = useSearchParams();\n  const category = SearchParams.get('category');\n  const userName = SearchParams.get('username');\n  useEffect(()=>{\n    const getAllpost = async()=>{\n      let res = await API.getAllPost({ category : category || '' ,username : userName || ''});\n      if(res.isSuccess){\n        setPosts(res.data);\n      }\n    }\n    getAllpost();\n  },[category,userName]);\n\n\n  return (\n    <>\n        {\n          posts?.length ? posts.map((post) => (\n              <Grid item lg={3} sm={4} xs={12} key={post._id}>\n                  <Link style={{textDecoration: 'none', color: 'inherit'}} to={`details/${post._id}`}>\n                      <Post post={post} />\n                  </Link>\n              </Grid>\n              )) : \n              <Box style={{color: '878787', margin: '30px 80px', fontSize: 18}}>\n                        No data is available for selected category\n                    </Box>\n            }\n    </>\n  )\n}\n\nexport default Posts"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AACzC,SAASC,IAAI,EAAEC,eAAe,QAAQ,kBAAkB;AAExD,SAAQC,GAAG,QAAO,mBAAmB;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAAA;AAE1B,MAAMC,KAAK,GAAG,MAAK;EAAA;EAEjB,MAAM,CAACC,KAAK,EAAGC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAM,CAACW,YAAY,CAAC,GAAGN,eAAe,EAAE;EACxC,MAAMO,QAAQ,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAC7C,MAAMC,QAAQ,GAAGH,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAC7CZ,SAAS,CAAC,MAAI;IACZ,MAAMc,UAAU,GAAG,YAAS;MAC1B,IAAIC,GAAG,GAAG,MAAMV,GAAG,CAACW,UAAU,CAAC;QAAEL,QAAQ,EAAGA,QAAQ,IAAI,EAAE;QAAEM,QAAQ,EAAGJ,QAAQ,IAAI;MAAE,CAAC,CAAC;MACvF,IAAGE,GAAG,CAACG,SAAS,EAAC;QACfT,QAAQ,CAACM,GAAG,CAACI,IAAI,CAAC;MACpB;IACF,CAAC;IACDL,UAAU,EAAE;EACd,CAAC,EAAC,CAACH,QAAQ,EAACE,QAAQ,CAAC,CAAC;EAGtB,oBACE;IAAA,UAEML,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEY,MAAM,GAAGZ,KAAK,CAACa,GAAG,CAAEC,IAAI,iBAC3B,QAAC,IAAI;MAAC,IAAI;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE,EAAG;MAAA,uBAC5B,QAAC,IAAI;QAAC,KAAK,EAAE;UAACC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAS,CAAE;QAAC,EAAE,EAAG,WAAUF,IAAI,CAACG,GAAI,EAAE;QAAA,uBAC/E,QAAC,IAAI;UAAC,IAAI,EAAEH;QAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IACjB,GAH2BA,IAAI,CAACG,GAAG;MAAA;MAAA;MAAA;IAAA,QAK7C,CAAC,gBACF,QAAC,GAAG;MAAC,KAAK,EAAE;QAACD,KAAK,EAAE,QAAQ;QAAEE,MAAM,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAA,UAAC;IAE5D;MAAA;MAAA;MAAA;IAAA;EAAM,iBAEnB;AAEP,CAAC;AAAA,GAlCKpB,KAAK;EAAA,QAIcH,eAAe;AAAA;AAAA,KAJlCG,KAAK;AAoCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}