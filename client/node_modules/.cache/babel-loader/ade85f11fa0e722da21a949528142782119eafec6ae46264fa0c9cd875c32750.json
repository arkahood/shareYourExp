{"ast":null,"code":"import axios from 'axios';\nimport { API_NOTIFICATION_MESSAGE, SERVICE_URLs } from '../constants/config.js';\nimport { getAccessToken, getType } from '../utils/common-utils.js';\nconst API_URL = \"/\";\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\naxiosInstance.interceptors.request.use(function (config) {\n  if (config.TYPE.params) {\n    config.params = config.TYPE.params;\n  } else if (config.TYPE.query) {\n    config.url = config.url + '/' + config.TYPE.query;\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  //Stop Global loader here\n  // console.log(\"config intercepting while res: \",response);\n  return processResponse(response);\n}, function (err) {\n  //Stop Global loader here\n  return Promise.reject(processError(err));\n});\n\n////////////////\n\n///////////////////////////////\n// If success -> returns { isSuccess: true, data: object }\n// If fail -> returns { isError: true, status: string, msg: string, code: int }\n//////////////////////////////\n\nconst processResponse = response => {\n  if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n    return {\n      isSuccess: true,\n      data: response.data\n    };\n  } else {\n    return {\n      isFailure: true,\n      status: response === null || response === void 0 ? void 0 : response.status,\n      msg: response === null || response === void 0 ? void 0 : response.msg,\n      code: response === null || response === void 0 ? void 0 : response.code\n    };\n  }\n};\nconst processError = error => {\n  if (error.response) {\n    // Request made and server responded with a status code \n    // that falls out of the range of 200\n    console.log(\"ERROR in response 89: \", error);\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGE.responseFailure,\n      code: error.response.status\n    };\n  } else if (error.request) {\n    console.log(\"ERROR in request : \", error.json());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGE.responseFailure,\n      code: \"\"\n    };\n  } else {\n    console.log(\"ERROR in NETWORK : \", error.json());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGE.responseFailure,\n      code: \"\"\n    };\n  }\n};\nconst API = {};\nfor (const [key, value] of Object.entries(SERVICE_URLs)) {\n  API[key] = (body, showUploadProgress, showDownloadProgress) => axiosInstance({\n    method: value.method,\n    url: value.url,\n    data: value.method === 'DELETE' ? {} : body,\n    responseType: value.responseType,\n    headers: {\n      authorization: getAccessToken()\n    },\n    TYPE: getType(value, body),\n    onUploadProgress: function (progressEvent) {\n      if (showUploadProgress) {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        showUploadProgress(percentCompleted);\n      }\n    },\n    onDownloadProgress: function (progressEvent) {\n      if (showDownloadProgress) {\n        let percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        showDownloadProgress(percentCompleted);\n      }\n    }\n  });\n}\nexport { API };","map":{"version":3,"names":["axios","API_NOTIFICATION_MESSAGE","SERVICE_URLs","getAccessToken","getType","API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","TYPE","params","query","url","error","Promise","reject","response","processResponse","err","processError","status","isSuccess","data","isFailure","msg","code","console","log","isError","responseFailure","json","API","key","value","Object","entries","body","showUploadProgress","showDownloadProgress","method","responseType","authorization","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","onDownloadProgress"],"sources":["/home/arkajit/Desktop/shareYourExp/client/src/service/api.js"],"sourcesContent":["import axios from 'axios';\nimport { API_NOTIFICATION_MESSAGE, SERVICE_URLs } from '../constants/config.js';\nimport { getAccessToken, getType } from '../utils/common-utils.js';\n\nconst API_URL = \"/\";\n\nconst axiosInstance = axios.create({\n    baseURL : API_URL,\n    timeout : 10000,\n    headers:{\n        \"content-type\" : \"application/json\"\n    }\n})\n\naxiosInstance.interceptors.request.use(\n    function(config) {\n        if (config.TYPE.params) {\n            config.params = config.TYPE.params\n        } else if (config.TYPE.query) {\n            config.url = config.url + '/' + config.TYPE.query;\n        }\n        return config;\n    },\n    function(error) {\n        return Promise.reject(error);\n    }\n);\n\naxiosInstance.interceptors.response.use(\n    function(response){\n        //Stop Global loader here\n        // console.log(\"config intercepting while res: \",response);\n        return processResponse(response);\n    },\n    function (err) {\n        //Stop Global loader here\n        return Promise.reject(processError(err));\n    }\n)\n\n////////////////\n\n///////////////////////////////\n// If success -> returns { isSuccess: true, data: object }\n// If fail -> returns { isError: true, status: string, msg: string, code: int }\n//////////////////////////////\n\nconst processResponse = (response) => {\n    if (response?.status === 200) {\n        return { isSuccess: true, data: response.data }\n    } else {\n        return {\n            isFailure: true,\n            status: response?.status,\n            msg: response?.msg,\n            code: response?.code\n        }\n    }\n}\n\nconst processError = (error)=>{\n    if(error.response){\n        // Request made and server responded with a status code \n        // that falls out of the range of 200\n        console.log(\"ERROR in response 89: \",error);\n        return {\n            isError : true,\n            msg : API_NOTIFICATION_MESSAGE.responseFailure,\n            code : error.response.status\n        }\n    }else if(error.request){\n        console.log(\"ERROR in request : \",error.json());\n        return {\n            isError : true,\n            msg : API_NOTIFICATION_MESSAGE.responseFailure,\n            code : \"\"\n        }\n    }else{\n        console.log(\"ERROR in NETWORK : \",error.json());\n        return {\n            isError : true,\n            msg : API_NOTIFICATION_MESSAGE.responseFailure,\n            code : \"\"\n        }\n    }\n}\n\n\n\nconst API = {};\n\nfor (const [key, value] of Object.entries(SERVICE_URLs)) {\n    API[key] = (body, showUploadProgress, showDownloadProgress) =>\n        axiosInstance({\n            method: value.method,\n            url: value.url,\n            data: value.method === 'DELETE' ? {} : body,\n            responseType: value.responseType,\n            headers : {\n                authorization : getAccessToken()\n            },\n            TYPE: getType(value, body),\n            onUploadProgress: function(progressEvent) {\n                if (showUploadProgress) {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                    showUploadProgress(percentCompleted);\n                }\n            },\n            onDownloadProgress: function(progressEvent) {\n                if (showDownloadProgress) {\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n                    showDownloadProgress(percentCompleted);\n                }\n            }\n        });\n}\n\nexport { API };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}